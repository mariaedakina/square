#ifndef SOLVER_H
#define SOLVER_H

#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#include <assert.h>

/**
 * @file solver.h
 * @brief Заголовочный файл для решения квадратных уравнений.
 *
 * Этот файл содержит структуры и функции, необходимые для решения
 * квадратных уравнений и работы с их корнями.
 */

const double EPS = 0.0000001; ///< Точность сравнения чисел с плавающей запятой.

/**
 * @struct Koefs
 * @brief Структура для хранения коэффициентов квадратного уравнения.
 *
 * Эта структура содержит три коэффициента: a, b и c.
 */
struct Koefs {
    double koef_a; ///< Коэффициент a.
    double koef_b; ///< Коэффициент b.
    double koef_c; ///< Коэффициент c.
};

/**
 * @struct Roots
 * @brief Структура для хранения корней квадратного уравнения.
 *
 * Эта структура содержит количество корней и сами корни уравнения.
 */
struct Roots {
    int nRoots;      ///< Количество корней (может быть 0, 1, 2 или INFINITY_ROOTS).
    double first_root;  ///< Первый корень уравнения.
    double second_root; ///< Второй корень уравнения (если есть).
};

/**
 * @struct Test_Date
 * @brief Структура для хранения данных теста.
 *
 * Эта структура содержит данные для тестирования решения квадратного уравнения:
 * номер теста, коэффициенты уравнения, ожидаемые корни и количество корней.
 */
struct Test_Date {
    int nTest;              ///< Номер теста.
    struct Koefs koefs;     ///< Коэффициенты квадратного уравнения.
    struct Roots roots;      ///< Ожидаемые корни уравнения.
    double right_x1;       ///< Ожидаемый первый корень.
    double right_x2;       ///< Ожидаемый второй корень (если есть).
    double right_nRoots;   ///< Ожидаемое количество корней.
};

/**
 * @enum roooots
 * @brief Перечисление возможных значений количества корней.
 *
 * Это перечисление определяет возможные значения для количества корней:
 * - INFINITY_ROOTS: бесконечное количество корней,
 * - ONE_ROOT: один корень,
 * - TWO_ROOTS: два корня,
 * - ZERO_ROOT: нет корней.
 */
enum roooots {INFINITY_ROOTS = -1, ONE_ROOT = 1, TWO_ROOTS = 2, ZERO_ROOT = 0};

/**
 * @brief Решение квадратного уравнения.
 *
 * Функция принимает указатель на структуру Test_Date и вычисляет
 * корни квадратного уравнения, основываясь на его коэффициентах.
 *
 * @param r Указатель на структуру Test_Date с коэффициентами уравнения.
 */
void SolveSquare(struct Test_Date* r);

#endif // SOLVER_H


